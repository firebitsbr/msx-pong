Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2020.03.20 - 19:09:44]

msx-pong.asm
Errors: 0

       1   00:0000                      ;------------------------------------------------------------------------
       2   00:0000                      ; HEADER FOR GENERATING A ROM FILE
       3   00:0000                      ;------------------------------------------------------------------------
       4   00:0000                      ;     output "../output/msxpong.rom"
       5   00:0000                      
       6   00:0000                      ;     defpage 0,4000h,16384
       7   00:0000                      ;     ; defpage 1,8000h
       8   00:0000                      
       9   00:0000                      ;     page 0
      10   00:0000                      
      11   00:0000                      ;     code @ 4000h
      12   00:0000                      
      13   00:0000                      ; romheader
      14   00:0000                      ;     byte "AB"
      15   00:0000                      ;     word START
      16   00:0000                      ;     word 0,0,0,0,0,0
      17   00:0000                      
      18   00:0000                      ;     code
      19   00:0000                      ;------------------------------------------------------------------------
      20   00:0000                      ; END OF HEADER
      21   00:0000                      ;------------------------------------------------------------------------
      22   00:0000                      
      23   00:0000                      ;------------------------------------------------------------------------
      24   00:0000                      ; HEADER FOR GENERATING A BIN FILE - OPEN FROM BASIC
      25   00:0000                      ;------------------------------------------------------------------------
      26   00:0000                          output "../output/msxpong.bin"
      27   00:8200                      
      28   00:8200  FE                      db #fe                  ;cabecera de ficheros que seran cargados con BLOAD desde basic
      29   00:8201  00 82                   dw START
      30   00:8203  FA B7                   dw END
      31   00:8205  00 82                   dw START
      32   00:8207                      
      33   00:8207                          org     #8200           ;starting point of the program in RAM
      34   00:8200                      ;------------------------------------------------------------------------
      35   00:8200                      ; END OF HEADER
      36   00:8200                      ;------------------------------------------------------------------------
      37   00:8200                      
      38   00:8200  (00:009F)           CHGET   equ     #009F
      39   00:8200  (00:00A2)           CHPUT   equ     #00A2
      40   00:8200  (00:00C6)           POSIT   equ     #00C6
      41   00:8200  (00:00B1)           INLIN   equ     #00B1
      42   00:8200  (00:00D8)           GTTRIG  equ     #00D8
      43   00:8200  (00:00D5)           GTSTCK  equ     #00D5
      44   00:8200                      
      45   00:8200  (00:013E)           RDVDP   equ     #013E       ;lee registro status VDP
      46   00:8200  (00:0047)           WRTVDP  equ     #0047       ;escribe registros del VDP
      47   00:8200  (00:005C)           LDIRVM  equ     #005C       ;RAM/ROM -> VRAM
      48   00:8200  (00:0059)           LDIRMV  equ     #0059       ;VRAM -> RAM
      49   00:8200  (00:005F)           CHGMOD  equ     #005F       ;change screen mode
      50   00:8200                      
      51   00:8200  (00:00C0)           BEEP    equ     #00C0       ;generates beep
      52   00:8200  (00:FBE5)           KEYMTX	equ     #FBE5       ;read the keys (Key Matrix, http://map.tni.nl/articles/keymatrix.php)
      53   00:8200                      
      54   00:8200                      
      55   00:8200  (00:F3DF)           RG0SAV  equ     #F3DF       ;Mirror fo VDP register 0 (Basic: VDP(0))
      56   00:8200  (00:F3E0)           RG1SAV  equ     #F3E0       ;Mirror fo VDP register 0 (Basic: VDP(0))
      57   00:8200  (00:F3E1)           RG2SAV  equ     #F3E1       ;Mirror fo VDP register 0 (Basic: VDP(0))
      58   00:8200  (00:F3E2)           RG3SAV  equ     #F3E2       ;Mirror fo VDP register 0 (Basic: VDP(0))
      59   00:8200  (00:F3E3)           RG4SAV  equ     #F3E3       ;Mirror fo VDP register 0 (Basic: VDP(0))
      60   00:8200  (00:F3E4)           RG5SAV  equ     #F3E4       ;Mirror fo VDP register 0 (Basic: VDP(0))
      61   00:8200  (00:F3E5)           RG6SAV  equ     #F3E5       ;Mirror fo VDP register 0 (Basic: VDP(0))
      62   00:8200  (00:F3E6)           RG7SAV  equ     #F3E6       ;Mirror fo VDP register 0 (Basic: VDP(0))
      63   00:8200  (00:F3E7)           STATFL  equ     #F3E7       ;Mirror fo VDP(8) status register (S#0)
      64   00:8200                      
      65   00:8200                      
      66   00:8200                      
      67   00:8200                      START:
      68   00:8200  CD 2A 82                call    initialize_video
      69   00:8203  CD 3D 82                call    initialize_tiles_and_sprites
      70   00:8206  CD 9E 82                call    initialize_variables
      71   00:8209                          ; call    CHGET
      72   00:8209                      
      73   00:8209                      loop:
      74   00:8209  76                      halt
      75   00:820A  CD E2 83                call    check_collisions
      76   00:820D  CD DC 82                call    update_ball_deltas
      77   00:8210  CD 3B 83                call    update_ball_position
      78   00:8213  CD 8E 83                call    update_computer_player
      79   00:8216  CD AF 83                call    update_player_1_controls
      80   00:8219  CD 07 84                call    update_sprite_attrs
      81   00:821C  CD 9F 82                call    dump_sprite_attrs_to_ram
      82   00:821F                      
      83   00:821F                      pausemode:
      84   00:821F  3A EC FB                ld	    a,(KEYMTX+7)                        ;escape key is in row 7...
      85   00:8222  CB 57               	bit	    2,a                                 ;...bit 2. If it's pressed...
      86   00:8224  CA 29 82            	jp	    z,exit                              ;...jump to exit
      87   00:8227                      
      88   00:8227                          ; jr      pausemode
      89   00:8227  18 E0                   jr      loop
      90   00:8229                      
      91   00:8229                      exit:
      92   00:8229  C9                      ret
      93   00:822A                      
      94   00:822A                      
      95   00:822A                      initialize_video:
      96   00:822A  3E 02                   ld      a,2                                 ;change to Screen 2
      97   00:822C  CD 5F 00                call    CHGMOD
      98   00:822F                      
      99   00:822F  3A E0 F3                ld      a,(RG1SAV)
     100   00:8232  F6 02                   or      00000010b                           ;force 16x16 sprites (screen 2,2)
     101   00:8234  E6 FE                   and     11111110b                           ;sprites wont be extended
     102   00:8236                      
     103   00:8236  47                      ld      b,a
     104   00:8237  0E 01                   ld      c,1
     105   00:8239  CD 47 00                call    WRTVDP                              ;writes all to the VDP register 1
     106   00:823C  C9                      ret
     107   00:823D                      
     108   00:823D                      
     109   00:823D                      initialize_tiles_and_sprites:
     110   00:823D  21 3E 84                ld      hl,tiles_data                       ;load tiles
     111   00:8240  11 00 00                ld      de,#0000
     112   00:8243  01 00 18                ld      bc,256*24
     113   00:8246  CD 5C 00                call    LDIRVM
     114   00:8249                          
     115   00:8249                      
     116   00:8249  21 3E 9C                ld      hl,tiles_color                      ;load tile colors
     117   00:824C  11 00 20                ld      de,#2000
     118   00:824F  01 00 18                ld      bc,256*24
     119   00:8252  CD 5C 00                call    LDIRVM
     120   00:8255                      
     121   00:8255                          
     122   00:8255  21 3E B4                ld      hl,screen_data                      ;load screen tile pattern
     123   00:8258  11 00 18                ld      de,#1800
     124   00:825B  01 00 03                ld      bc,256*3
     125   00:825E  CD 5C 00                call    LDIRVM
     126   00:8261                      
     127   00:8261  21 3E B7                ld      hl,spr_ball                       ;load ball sprite
     128   00:8264  11 00 38                ld      de,#3800
     129   00:8267  01 20 00                ld      bc,8*4
     130   00:826A  CD 5C 00                call    LDIRVM
     131   00:826D                      
     132   00:826D  21 5E B7                ld      hl,spr_ply1_1                       ;load player 1 sprite 1
     133   00:8270  11 20 38                ld      de,#3820
     134   00:8273  01 20 00                ld      bc,8*4
     135   00:8276  CD 5C 00                call    LDIRVM
     136   00:8279  21 7E B7                ld      hl,spr_ply1_2                       ;load player 1 sprite 2
     137   00:827C  11 40 38                ld      de,#3840
     138   00:827F  01 20 00                ld      bc,8*4
     139   00:8282  CD 5C 00                call    LDIRVM
     140   00:8285                      
     141   00:8285  21 9E B7                ld      hl,spr_ply2_1                       ;load player 2 sprite 1
     142   00:8288  11 60 38                ld      de,#3860
     143   00:828B  01 20 00                ld      bc,8*4
     144   00:828E  CD 5C 00                call    LDIRVM
     145   00:8291  21 BE B7                ld      hl,spr_ply2_2                       ;load player 2 sprite 2
     146   00:8294  11 80 38                ld      de,#3880
     147   00:8297  01 20 00                ld      bc,8*4
     148   00:829A  CD 5C 00                call    LDIRVM
     149   00:829D                      
     150   00:829D  C9                      ret
     151   00:829E                          
     152   00:829E                      
     153   00:829E                      initialize_variables:
     154   00:829E  C9                      ret
     155   00:829F                      
     156   00:829F                      dump_sprite_attrs_to_ram:
     157   00:829F  21 E6 B7                ld      hl,ball_spr_attr                    ;set ball sprite attributes
     158   00:82A2  11 00 1B                ld      de,#1b00
     159   00:82A5  01 04 00                ld      bc,4
     160   00:82A8                      
     161   00:82A8  CD 5C 00                call    LDIRVM
     162   00:82AB  21 EA B7                ld      hl,spr_ply1_1_attr                  ;set attributes for player 1 sprite 1
     163   00:82AE  11 04 1B                ld      de,#1b04
     164   00:82B1  01 04 00                ld      bc,4
     165   00:82B4  CD 5C 00                call    LDIRVM
     166   00:82B7  21 EE B7                ld      hl,spr_ply1_2_attr                  ;set attributes for player 1 sprite 2
     167   00:82BA  11 08 1B                ld      de,#1b08
     168   00:82BD  01 04 00                ld      bc,4
     169   00:82C0  CD 5C 00                call    LDIRVM
     170   00:82C3                      
     171   00:82C3  21 F2 B7                ld      hl,spr_ply2_1_attr                  ;set attributes for player 2 sprite 1
     172   00:82C6  11 0C 1B                ld      de,#1b0c
     173   00:82C9  01 04 00                ld      bc,4
     174   00:82CC  CD 5C 00                call    LDIRVM
     175   00:82CF  21 F6 B7                ld      hl,spr_ply2_2_attr                  ;set attributes for player 2 sprite 2
     176   00:82D2  11 10 1B                ld      de,#1b10
     177   00:82D5  01 04 00                ld      bc,4
     178   00:82D8  CD 5C 00                call    LDIRVM
     179   00:82DB                      
     180   00:82DB  C9                      ret
     181   00:82DC                      
     182   00:82DC                      ;------------------------------------------------------------------------
     183   00:82DC                      ; Update ball increments
     184   00:82DC                      ;------------------------------------------------------------------------
     185   00:82DC                      update_ball_deltas:
     186   00:82DC  3A E2 B7                ld      a,(ball_speed)                      ;if ball speed is equal a number, continue
     187   00:82DF  FE 01                   cp      1
     188   00:82E1  28 13                   jr      z,continue_deltas
     189   00:82E3  3A E3 B7                ld      a,(ball_bounces)                    ;if ball bounces dont reach a number, continue
     190   00:82E6  FE 14                   cp      20
     191   00:82E8  20 0C                   jr      nz,continue_deltas
     192   00:82EA  3E 00                   ld      a,0                                 ;reset ball bounces to 0
     193   00:82EC  32 E3 B7                ld      (ball_bounces),a
     194   00:82EF  3A E2 B7                ld      a,(ball_speed)                      ;increase ball speed
     195   00:82F2  3C                      inc     a
     196   00:82F3  32 E2 B7                ld      (ball_speed),a
     197   00:82F6                      
     198   00:82F6                      continue_deltas:
     199   00:82F6  3A DF B7                ld      a,(ball_y)                          ;load ball y position into a registry
     200   00:82F9  FE B2                   cp      178                                 ;compare with 178 (max y is 191)
     201   00:82FB  30 12                   jr      nc,change_ball_delta_y              ;jump if y position greater
     202   00:82FD  FE 06                   cp      6                                   ;compare with 6
     203   00:82FF  38 0E                   jr      c,change_ball_delta_y               ;jump if lower
     204   00:8301                      
     205   00:8301                      check_delta_x:
     206   00:8301  3A DE B7                ld      a,(ball_x)                          
     207   00:8304  FE F7                   cp      247
     208   00:8306                          ; jr      nc,change_ball_delta_x
     209   00:8306  C3 FA B7                jp      END
     210   00:8309  FE 04                   cp      4
     211   00:830B                          ; jr      c,change_ball_delta_x
     212   00:830B  C3 FA B7                jp      END
     213   00:830E                      delta_ret:
     214   00:830E  C9                      ret
     215   00:830F                      
     216   00:830F                      change_ball_delta_y:
     217   00:830F  3A E3 B7                ld      a,(ball_bounces)
     218   00:8312  3C                      inc     a
     219   00:8313  32 E3 B7                ld      (ball_bounces),a
     220   00:8316  3A E1 B7                ld      a,(ball_y_inc)                      
     221   00:8319  FE 01                   cp      1
     222   00:831B  28 0F                   jr      z,change_ball_delta_y_negative
     223   00:831D  3A DF B7                ld      a,(ball_y)                          ;substract a pixel from x
     224   00:8320  87                      add     a
     225   00:8321  32 DF B7                ld      (ball_y),a                          ;end of substract
     226   00:8324  3E 01                   ld      a,1
     227   00:8326  32 E1 B7                ld      (ball_y_inc),a
     228   00:8329  C3 01 83                jp      check_delta_x
     229   00:832C                      change_ball_delta_y_negative:
     230   00:832C  3A DF B7                ld      a,(ball_y)                          ;add a pixel to y
     231   00:832F  3D                      dec     a
     232   00:8330  32 DF B7                ld      (ball_y),a
     233   00:8333  3E 00                   ld      a,0                                 ;now change delta
     234   00:8335  32 E1 B7                ld      (ball_y_inc),a
     235   00:8338  C3 01 83                jp      check_delta_x
     236   00:833B                      
     237   00:833B                      ; change_ball_delta_x:
     238   00:833B                      ;     ld      a,(ball_bounces)
     239   00:833B                      ;     inc     a
     240   00:833B                      ;     ld      (ball_bounces),a
     241   00:833B                      ;     ld      a,(ball_x_inc)                      
     242   00:833B                      ;     cp      1
     243   00:833B                      ;     jr      z,change_ball_delta_x_negative
     244   00:833B                      ;     ld      a,(ball_x)                          ;substract a pixel from x
     245   00:833B                      ;     add     a
     246   00:833B                      ;     ld      (ball_x),a                          ;end of substract
     247   00:833B                      ;     ld      a,1
     248   00:833B                      ;     ld      (ball_x_inc),a
     249   00:833B                      ;     jp      delta_ret
     250   00:833B                      ; change_ball_delta_x_negative:
     251   00:833B                      ;     ld      a,(ball_x)                          ;add a pixel to x
     252   00:833B                      ;     dec     a
     253   00:833B                      ;     ld      (ball_x),a
     254   00:833B                      ;     ld      a,0                                 ;now change delta
     255   00:833B                      ;     ld      (ball_x_inc),a
     256   00:833B                      ;     jp      delta_ret
     257   00:833B                      
     258   00:833B                      ;------------------------------------------------------------------------
     259   00:833B                      ; Update ball position
     260   00:833B                      ;------------------------------------------------------------------------
     261   00:833B                      update_ball_position:
     262   00:833B  3A E1 B7                ld      a,(ball_y_inc)
     263   00:833E  FE 01                   cp      1
     264   00:8340  CA 66 83                jp      z,ball_y_increase
     265   00:8343                      
     266   00:8343  3A E2 B7                ld      a,(ball_speed)
     267   00:8346  47                      ld      b,a
     268   00:8347  3A DF B7                ld      a,(ball_y)
     269   00:834A  CD 8A 83                call    loop_position_decrement
     270   00:834D  32 DF B7                ld      (ball_y),a
     271   00:8350                      
     272   00:8350                      update_pos_x:    
     273   00:8350  3A E0 B7                ld      a,(ball_x_inc)
     274   00:8353  FE 01                   cp      1
     275   00:8355  CA 76 83                jp      z,ball_x_increase
     276   00:8358                          
     277   00:8358  3A E2 B7                ld      a,(ball_speed)
     278   00:835B  47                      ld      b,a
     279   00:835C  3A DE B7                ld      a,(ball_x)
     280   00:835F  CD 8A 83                call    loop_position_decrement
     281   00:8362  32 DE B7                ld      (ball_x),a
     282   00:8365                      update_ret:
     283   00:8365  C9                      ret
     284   00:8366                      
     285   00:8366                      
     286   00:8366                      ball_y_increase:
     287   00:8366  3A E2 B7                ld      a,(ball_speed)
     288   00:8369  47                      ld      b,a
     289   00:836A  3A DF B7                ld      a,(ball_y)
     290   00:836D  CD 86 83                call    loop_position_increment
     291   00:8370  32 DF B7                ld      (ball_y),a
     292   00:8373  C3 50 83                jp      update_pos_x
     293   00:8376                      
     294   00:8376                      ball_x_increase:
     295   00:8376  3A E2 B7                ld      a,(ball_speed)
     296   00:8379  47                      ld      b,a
     297   00:837A  3A DE B7                ld      a,(ball_x)
     298   00:837D  CD 86 83                call    loop_position_increment
     299   00:8380  32 DE B7                ld      (ball_x),a
     300   00:8383  C3 65 83                jp      update_ret
     301   00:8386                      
     302   00:8386                      
     303   00:8386                      loop_position_increment
     304   00:8386  3C                      inc     a
     305   00:8387  10 FD                   djnz    loop_position_increment
     306   00:8389  C9                      ret
     307   00:838A                      
     308   00:838A                      loop_position_decrement
     309   00:838A  3D                      dec     a
     310   00:838B  10 FD                   djnz    loop_position_decrement
     311   00:838D  C9                      ret
     312   00:838E                      
     313   00:838E                      
     314   00:838E                      ;------------------------------------------------------------------------
     315   00:838E                      ; Update computer player
     316   00:838E                      ;------------------------------------------------------------------------
     317   00:838E                      update_computer_player:
     318   00:838E  3A E5 B7                ld      a,(ply2_y)
     319   00:8391  47                      ld      b,a
     320   00:8392  3A DF B7                ld      a,(ball_y)
     321   00:8395  C6 04                   add     a,4
     322   00:8397  B8                      cp      b
     323   00:8398  28 14                   jr      z,update_computer_player_finish
     324   00:839A  38 0A                   jr      c,update_computer_player_decrease
     325   00:839C  3A E5 B7                ld      a,(ply2_y)
     326   00:839F  C6 03                   add     a,3
     327   00:83A1  32 E5 B7                ld      (ply2_y),a
     328   00:83A4  18 08                   jr      update_computer_player_finish
     329   00:83A6                      update_computer_player_decrease:
     330   00:83A6  3A E5 B7                ld      a,(ply2_y)
     331   00:83A9  D6 03                   sub     a,3
     332   00:83AB  32 E5 B7                ld      (ply2_y),a
     333   00:83AE                      update_computer_player_finish
     334   00:83AE  C9                      ret
     335   00:83AF                      
     336   00:83AF                      ;------------------------------------------------------------------------
     337   00:83AF                      ; Update Player from controls
     338   00:83AF                      ;------------------------------------------------------------------------
     339   00:83AF                      update_player_1_controls
     340   00:83AF  AF                      xor     a
     341   00:83B0  CD D5 00                call    GTSTCK
     342   00:83B3  FE 01                   cp      1
     343   00:83B5  28 06                   jr      z,move_player_1_up
     344   00:83B7  FE 05                   cp      5
     345   00:83B9  28 15                   jr      z,move_player_1_down
     346   00:83BB  18 24                   jr      update_player_1_controls_finish
     347   00:83BD                      move_player_1_up
     348   00:83BD  3A E4 B7                ld      a,(ply1_y)
     349   00:83C0  D6 03                   sub     a,3
     350   00:83C2  32 E4 B7                ld      (ply1_y),a
     351   00:83C5  FE 10                   cp      16
     352   00:83C7  30 18                   jr      nc,update_player_1_controls_finish
     353   00:83C9  3E 10                   ld      a,16
     354   00:83CB  32 E4 B7                ld      (ply1_y),a
     355   00:83CE  18 11                   jr      update_player_1_controls_finish
     356   00:83D0                      move_player_1_down
     357   00:83D0  3A E4 B7                ld      a,(ply1_y)
     358   00:83D3  C6 03                   add     a,3
     359   00:83D5  32 E4 B7                ld      (ply1_y),a
     360   00:83D8  FE AF                   cp      175
     361   00:83DA  38 05                   jr      c,update_player_1_controls_finish
     362   00:83DC  3E AF                   ld      a,175
     363   00:83DE  32 E4 B7                ld      (ply1_y),a
     364   00:83E1                      update_player_1_controls_finish:
     365   00:83E1  C9                      ret
     366   00:83E2                      
     367   00:83E2                      ;------------------------------------------------------------------------
     368   00:83E2                      ; Check collisions
     369   00:83E2                      ;------------------------------------------------------------------------
     370   00:83E2                      check_collisions:
     371   00:83E2  3A E7 F3                ld      a,(STATFL)
     372   00:83E5  CB 6F                   bit     5,a
     373   00:83E7  28 1D                   jr      z,check_collisions_end
     374   00:83E9                      
     375   00:83E9                          
     376   00:83E9  3A E0 B7                ld      a,(ball_x_inc)
     377   00:83EC  FE 01                   cp      1
     378   00:83EE  28 0C                   jr      z,ball_collision_set_decrease
     379   00:83F0  3E 01                   ld      a,1
     380   00:83F2  32 E0 B7                ld      (ball_x_inc),a
     381   00:83F5  3E 09                   ld      a,9
     382   00:83F7  32 DE B7                ld      (ball_x),a
     383   00:83FA  18 0A                   jr      check_collisions_end
     384   00:83FC                      ball_collision_set_decrease:
     385   00:83FC  3E 00                   ld      a,0
     386   00:83FE  32 E0 B7                ld      (ball_x_inc),a
     387   00:8401  3E F0                   ld      a,240
     388   00:8403  32 DE B7                ld      (ball_x),a
     389   00:8406                      check_collisions_end:
     390   00:8406  C9                      ret
     391   00:8407                      
     392   00:8407                      ;------------------------------------------------------------------------
     393   00:8407                      ; Update sprite attributes
     394   00:8407                      ;------------------------------------------------------------------------
     395   00:8407                      update_sprite_attrs:
     396   00:8407  DD 21 E6 B7             ld      ix,ball_spr_attr    ; Update ball attrs
     397   00:840B  3A DF B7                ld      a,(ball_y)          ; ball Y coordinate
     398   00:840E  DD 77 00                ld      (ix+0),a
     399   00:8411  3A DE B7                ld      a,(ball_x)          ; ball X coordinate
     400   00:8414  DD 77 01                ld      (ix+1),a
     401   00:8417                      
     402   00:8417  DD 21 EE B7             ld      ix,spr_ply1_2_attr  ; Update player 1 attrs
     403   00:841B  3A E4 B7                ld      a,(ply1_y)          ; player 1 Y coordinate
     404   00:841E  DD 77 00                ld      (ix+0),a
     405   00:8421  DD 21 EA B7             ld      ix,spr_ply1_1_attr  ; Update player 1 attrs
     406   00:8425  D6 10                   sub     a,16
     407   00:8427  DD 77 00                ld      (ix+0),a
     408   00:842A                      
     409   00:842A  DD 21 F6 B7             ld      ix,spr_ply2_2_attr  ; Update player 2 attrs
     410   00:842E  3A E5 B7                ld      a,(ply2_y)          ; player 2 Y coordinate
     411   00:8431  DD 77 00                ld      (ix+0),a
     412   00:8434  DD 21 F2 B7             ld      ix,spr_ply2_1_attr  ; Update player 2 attrs
     413   00:8438  D6 10                   sub     a,16
     414   00:843A  DD 77 00                ld      (ix+0),a
     415   00:843D  C9                      ret
     416   00:843E                      
     417   00:843E                      ;------------------------------------------------------------------------
     418   00:843E                      ; CONSTANTS
     419   00:843E                      ;------------------------------------------------------------------------
     420   00:843E                      
     421   00:843E                      ;Tiles
     422   00:843E  (1800)              tiles_data:             incbin "bin/pong_tiles.til"
     423   00:9C3E  (1800)              tiles_color:            incbin "bin/pong_tiles.col"
     424   00:B43E  (0300)              screen_data:            incbin "bin/pong_screen.dat"
     425   00:B73E                      
     426   00:B73E                      ;Sprites - Ball
     427   00:B73E                      ;spr_ball_1:             db  #07,#1F,#33,#6F,#7F,#FF,#FF,#FF,#FF,#FF,#7F,#7F,#3F,#1F,#07,#00,#C0,#F0,#F8,#FC,#FC,#FE,#FE,#FE,#FE,#FE,#FC,#FC,#F8,#F0,#C0,#00
     428   00:B73E                      
     429   00:B73E                      spr_ball:               db #38,#7C,#FE,#FE,#FE,#7C,#38,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
     429   00:B73E  38 7C FE FE FE 7C 38 00 00 00 00 00 00 00 00 00 
     429   00:B74E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     430   00:B75E                      
     431   00:B75E                      ; Sprites - Player 1
     432   00:B75E                      spr_ply1_1:              db #18,#38,#78,#78,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
     432   00:B75E  18 38 78 78 F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 
     432   00:B76E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     433   00:B77E                      spr_ply1_2:              db #F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#78,#78,#38,#18,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
     433   00:B77E  F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 78 78 38 18 
     433   00:B78E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     434   00:B79E                      
     435   00:B79E                      ; Sprites - Player 2
     436   00:B79E                      spr_ply2_1:              db #C0,#E0,#F0,#F0,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
     436   00:B79E  C0 E0 F0 F0 F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 
     436   00:B7AE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     437   00:B7BE                      spr_ply2_2:              db #F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F8,#F0,#F0,#E0,#C0,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
     437   00:B7BE  F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 F8 F0 F0 E0 C0 
     437   00:B7CE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     438   00:B7DE                      
     439   00:B7DE                      
     440   00:B7DE                      
     441   00:B7DE                      
     442   00:B7DE                      
     443   00:B7DE                      ;------------------------------------------------------------------------
     444   00:B7DE                      ; VARIABLE DEFINITION
     445   00:B7DE                      ;------------------------------------------------------------------------
     446   00:B7DE  1E                  ball_x:                 db      30
     447   00:B7DF  32                  ball_y:                 db      50
     448   00:B7E0  01                  ball_x_inc:             db      1
     449   00:B7E1  01                  ball_y_inc:             db      1
     450   00:B7E2  01                  ball_speed              db      1
     451   00:B7E3  00                  ball_bounces            db      0
     452   00:B7E4  32                  ply1_y                  db      50
     453   00:B7E5  50                  ply2_y                  db      80
     454   00:B7E6                      
     455   00:B7E6                      ;ball_spr_attr:          ds      4,0                    ;Y, X, escena, color
     456   00:B7E6  40 64 00 0F         ball_spr_attr:          db      64, #64, #0, #F        ;Y, X, escena, color
     457   00:B7EA                      
     458   00:B7EA  40 04 04 06         spr_ply1_1_attr:        db      64, 4, 4, 6        ;Y, X, escena, color
     459   00:B7EE  50 04 08 06         spr_ply1_2_attr:        db      80, 4, 8, 6        ;Y, X, escena, color
     460   00:B7F2                      
     461   00:B7F2  40 F7 0C 07         spr_ply2_1_attr:        db      64, 247, 12, 7        ;Y, X, escena, color
     462   00:B7F6  50 F7 10 07         spr_ply2_2_attr:        db      80, 247, 16, 7        ;Y, X, escena, color
     463   00:B7FA                      
     464   00:B7FA                      END:
     465   00:B7FA  C9                      ret

    LABELS
-------------------------------------------------
00:0000009F X CHGET
00:000000A2 X CHPUT
00:000000C6 X POSIT
00:000000B1 X INLIN
00:000000D8 X GTTRIG
00:000000D5   GTSTCK
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:000000C0 X BEEP
00:0000FBE5   KEYMTX
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7   STATFL
00:00008200   START
00:00008209   loop
00:0000821F X pausemode
00:00008229   exit
00:0000822A   initialize_video
00:0000823D   initialize_tiles_and_sprites
00:0000829E   initialize_variables
00:0000829F   dump_sprite_attrs_to_ram
00:000082DC   update_ball_deltas
00:000082F6   continue_deltas
00:00008301   check_delta_x
00:0000830E X delta_ret
00:0000830F   change_ball_delta_y
00:0000832C   change_ball_delta_y_negative
00:0000833B   update_ball_position
00:00008350   update_pos_x
00:00008365   update_ret
00:00008366   ball_y_increase
00:00008376   ball_x_increase
00:00008386   loop_position_increment
00:0000838A   loop_position_decrement
00:0000838E   update_computer_player
00:000083A6   update_computer_player_decrease
00:000083AE   update_computer_player_finish
00:000083AF   update_player_1_controls
00:000083BD   move_player_1_up
00:000083D0   move_player_1_down
00:000083E1   update_player_1_controls_finish
00:000083E2   check_collisions
00:000083FC   ball_collision_set_decrease
00:00008406   check_collisions_end
00:00008407   update_sprite_attrs
00:0000843E   tiles_data
00:00009C3E   tiles_color
00:0000B43E   screen_data
00:0000B73E   spr_ball
00:0000B75E   spr_ply1_1
00:0000B77E   spr_ply1_2
00:0000B79E   spr_ply2_1
00:0000B7BE   spr_ply2_2
00:0000B7DE   ball_x
00:0000B7DF   ball_y
00:0000B7E0   ball_x_inc
00:0000B7E1   ball_y_inc
00:0000B7E2   ball_speed
00:0000B7E3   ball_bounces
00:0000B7E4   ply1_y
00:0000B7E5   ply2_y
00:0000B7E6   ball_spr_attr
00:0000B7EA   spr_ply1_1_attr
00:0000B7EE   spr_ply1_2_attr
00:0000B7F2   spr_ply2_1_attr
00:0000B7F6   spr_ply2_2_attr
00:0000B7FA   END


 Output: msx-pong.out
-------------------------------------------------

 Page: 00
  Org: 00008200  Size: *  Used: 00000000

    No output

 Output: ../output/msxpong.bin
-------------------------------------------------

 Page: 00
  Org: 00008200  Size: *  Used: 00003602

   Address   Length Align   Label
   00008200   13826         START
